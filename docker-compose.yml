services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-talkai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-talkai_password}
      POSTGRES_DB: ${POSTGRES_DB:-talkai_db}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-talkai_user} -d ${POSTGRES_DB:-talkai_db}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - talkai-network

  ollama:
    image: ollama/ollama
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD-SHELL", "ollama list > /dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    networks:
      - talkai-network

  # Service pour installer phi3 automatiquement
  ollama-init:
    image: ubuntu:20.04
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      DEBIAN_FRONTEND: noninteractive
    command: >
      bash -c "
        apt-get update &&
        apt-get install -y curl &&
        curl -fsSL https://ollama.com/install.sh | sh &&
        echo 'Waiting for Ollama service to be fully ready...' &&
        sleep 10 &&
        OLLAMA_HOST=http://ollama:11434 ollama pull phi3 &&
        echo 'Phi3 model installed successfully'
      "
    networks:
      - talkai-network
    restart: "no"

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: ["/wait-and-init.sh"]
    volumes:
      - .:/app
      - ./front/static/assets/images/avatars:/app/front/static/assets/images/avatars
      - ./audio:/app/audio
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_healthy
      ollama-init:
        condition: service_completed_successfully
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-talkai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-talkai_password}
      POSTGRES_DB: ${POSTGRES_DB:-talkai_db}
      PYTHONPATH: /app
      OLLAMA_HOST: http://ollama:11434
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - talkai-network

volumes:
  postgres_data:
    driver: local
  ollama:
    driver: local

networks:
  talkai-network:
    driver: bridge